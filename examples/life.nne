// game of life

neighbors((x, y)) =
  (-1..1) { dx ->
    (-1..1) { dy ->
      if (dx, dy) != (0, 0)
        yield (x + dx, y + dy)
    }
  }

frequency(collection) =
  countBy(collection, identity)

tick(state) = {
  sides = frequency(flatmap(state, neighbors))
  cells = frequency(state)
  entries(sides) { (coordinate, count) ->
    if count == 3 or count == 2 and contains?(cells, coordinate)
      yield coordinate
  }
}

draw(state, x, y, x', y') =
  (x..x') { dx ->
    (y..y') { dy ->
      if contains?(state, (dx, dy))
        write("# ")
      else
        write(". ") 
    }
  }

state := set((0, 0), (0, 1), (1, 0), (1, 1))

state {
  draw(state, -7, -7, 7, 7)
}

mouse.left {
  Click({ .x, .y }) -> print("click at X {x}, Y {y}")
}

loop {
  state := set(tick(state))
}
